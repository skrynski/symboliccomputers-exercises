-------- ex 1 ---------------------------------------

free(x, e) = 

    if atom(e) then // ATOM
        if e = x then TRUE else FALSE 
    else 
        if is_lambda(e) then // LAMBDA
            if contains(x, formals(e)) then 
                FALSE
            else
                free(x, body(e))
        else // APPLICATION
            anySatisfy(\t | free(x, t),  e)

anySatisfy(f, l) =  if empty?(l) then 
                        FALSE
                    else
                        if f(car(l)) then
                            TRUE
                        else
                            anySatisfy(f, cdr(l))
                





-------- ex 2 ---------------------------------------

subs(y,x,m) = 

    if atom(m) then // ATOM
        if e = x then y else x 
    else 
        if is_lambda(m) then // LAMBDA
           

            if contains(x, formals(m)) then 
                m    
            else
                let newlambda=sanitizeLambda(m,y) in
                    list('lambda, formals(newlambda), subs(y, x, body(newlambda))

        else // APPLICATION
            map(\t | subs(y,x,t),  m)

sanitizeLambda(m,y)=
    foldr(m, 
        \var exp |
                
            if contains(var, free(y))
                let nvar = newvar() in
                    list(
                        'lambda, 
                        subs(nvar, var,formals(m)),
                        subs(nvar, var,body(m)))                                       
            else 
                exp
        ,
        formals(m)) 